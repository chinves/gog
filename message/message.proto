package message;

import "code.google.com/p/gogoprotobuf/gogoproto/gogo.proto";

option (gogoproto.gostring_all) = true;
option (gogoproto.equal_all) = true;
option (gogoproto.verbose_equal_all) = true;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) =  true;
option (gogoproto.populate_all) = true;
option (gogoproto.testgen_all) = true;
option (gogoproto.benchgen_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;

// User defined messages.
message UserMessage {
        required string id     = 1;
        optional bytes payload = 2;
        required int64 ts      = 3; // Millisecond.
}

// The Join request.
message Join {
        required string id   = 1;
        required string addr = 2;
}

// The Neighbor request.
message Neighbor {
        required string id = 1;
        enum Priority {
                Low  = 0;
                High = 1;
        }
        required string addr       = 2;
        required Priority priority = 3;
}

// The reply to Neighbor request.
message NeighborReply {
        required string id   = 1;
        required bool accept = 2;
}

// The ForwardJoin request.
message ForwardJoin {
        required string id         = 1;
        required string sourceId   = 2;
        required string sourceAddr = 3;
        required uint32 ttl        = 4;
        // Maybe add a nounce here to avoid
        // fake reply.
}

// The Disconnect request.
message Disconnect {
        required string id = 1;
}

// The Candidate.
message Candidate {
        required string id   = 1;
        required string addr = 2;
}

// The Shuffle request.
message Shuffle {
        required string id            = 1;
        required string sourceId      = 2;
        required string addr          = 3;
        repeated Candidate candidates = 4;
        required uint32 ttl           = 5;
}

// The ShuffleReply.
message ShuffleReply {
        required string id            = 1;
        repeated Candidate candidates = 2;
}
